{"version":3,"sources":["Tag.js","JobCard.js","About.js","Hire.js","Filter.js","Tabs.js","App.js","serviceWorker.js","index.js"],"names":["Tag","text","style","borderRadius","border","padding","marginLeft","Typography","fontSize","JobCard","job","darkTheme","createTheme","palette","mode","ThemeProvider","theme","display","justifyContent","alignItems","marginTop","boxShadow","Box","sx","flexDirection","image","src","url","width","height","align","variant","component","CardContent","flex","color","company","fontWeight","jobTitle","minMonthlySalary","maxMonthlySalary","numberOfMonth","salary","backgroundColor","parseInt","tags","includes","Button","href","link","About","mt","Hire","target","Filter","BasicTabs","jobs","ReactGA","initialize","trackingId","process","React","value","setValue","typography","TabContext","borderBottom","borderColor","TabList","onChange","event","newValue","aria-label","Tab","label","onClick","category","action","TabPanel","map","i","fields","id","App","require","max","useState","setJobs","imageNumber","Math","floor","random","useEffect","a","axios","res","data","records","getJobs","CssBaseline","backgroundImage","length","backgroundSize","backgroundPosition","Container","maxWidth","pt","textShadow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e437810b.chunk.js","sourcesContent":["import React from 'react'\nimport Typography from '@mui/material/Typography';\n\nfunction Tag({ text }) {\n    return (\n        <div style={{ borderRadius: '100px', border: '1px solid #dddddd', padding: '5px 10px 5px 10px', marginLeft: '10px' }}>\n            <Typography fontSize='smaller'>\n                {text}\n            </Typography>\n\n        </div>\n    )\n}\n\nexport default Tag\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Tag from './Tag';\n\nexport default function JobCard({ job }) {\n    const darkTheme = createTheme({\n        palette: {\n            mode: 'light',\n        },\n    });\n    // console.log(job);\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"20px\", borderRadius: \"12px\", border: '1px solid #dddddd', boxShadow: '2px 2px 4px #efeeee' }}>\n                <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    {job.image ? <img src={job.image[0].url} style={{ width: '60px', height: '60px', marginLeft: '20px', borderRadius: '8px', border: '1px solid #dddddd' }} /> :\n                        <Typography align='center' display=\"block\" variant=\"h3\" component=\"div\" sx={{ width: '60px', height: '60px', marginLeft: '20px', borderRadius: '8px', border: '1px solid #dddddd', alignItems: 'center' }} >\n                            💻\n                        </Typography>\n                    }\n                    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n\n                        <CardContent sx={{ flex: '1 0 auto', width: '25vw' }}>\n                            <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\" >\n                                {job.company}\n                            </Typography>\n\n                            <Typography component=\"div\" variant=\"h6\" fontWeight=\"700\">\n                                {job.jobTitle}\n                            </Typography>\n                            {((job.minMonthlySalary && job.maxMonthlySalary && job.numberOfMonth) || job.salary) &&\n                                <div style={{ backgroundColor: '#dddddd', padding: '5px 10px 5px 10px', borderRadius: '4px', marginTop: '4px', display: 'inline-block' }}>\n                                    <Typography component=\"div\" variant=\"p\" fontWeight=\"700\">\n                                        {(job.minMonthlySalary && job.maxMonthlySalary && job.numberOfMonth) && \"💰 \" + parseInt(job.minMonthlySalary / 1000) + \"k - \" + parseInt(job.maxMonthlySalary / 1000) + \"k * \" + job.numberOfMonth}\n                                        {job.salary && \"💰 \" + parseInt(job.salary) / 10000 + \"w\"}\n                                    </Typography>\n                                </div>}\n                        </CardContent>\n\n\n                    </Box>\n                </Box>\n                <CardContent sx={{ display: 'flex', flexDirection: 'row', width: '40%' }}>\n                    {(job.tags && job.tags.includes(\"remote\")) && <Tag text=\"🌎 远程\" />}\n                    {(job.tags && job.tags.includes(\"startup\")) && <Tag text=\"🏡 初创\" />}\n                    {(job.tags && job.tags.includes(\"parttime\")) && <Tag text=\"👩‍💻 兼职\" />}\n                    {(job.tags && job.tags.includes(\"english\")) && <Tag text=\"🇺🇸 英语\" />}\n                </CardContent>\n                <CardContent>\n                    <Button variant=\"contained\" href={job.link}>\n                        申请\n                    </Button>\n                </CardContent>\n            </div>\n        </ThemeProvider>\n    );\n}\n","import React from 'react'\nimport { Typography } from '@mui/material';\n\nfunction About() {\n    return (\n        <div>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"20px\"  >关于远程工作<br /></Typography>\n            <Typography variant=\"p\"  >\n                - 你可能想找寻一份远程的工作，把更多在路上的时间花在陪家人、朋友，以及做更有意义的事情上面。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能想找一份远程的兼职，利用自己的闲暇时间赚些零花钱。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能想找一份国外的远程工作，打破工资水平的限制，让自己花更少的时间赚更多的钱。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能是一家公司的创始人，希望团队通过远程协作降低租金成本。<br /></Typography>\n            <Typography variant=\"p\" >- ...<br /></Typography>\n            <Typography variant=\"p\" >疫情之后，「远程工作」的可行性已经被验证，不少公司（如Quora）已经做出了远程优先（remote-first）的决策。国内的一些高质量公司也开始允许员工每周自由选择远程办公。</Typography>\n            <Typography variant=\"p\" >我认为，在未来，大家的工作将变得full-remote，不再受到地理条件的限制。<br /><br /></Typography>\n            <Typography variant=\"p\" >remote and startup是为了<b>加速这个流程</b>而诞生的。</Typography>\n\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"40px\"  >关于初创公司<br /></Typography>\n            <Typography variant=\"p\" >\n                - 你可能见过无数初创公司号称自己业务好、不加班、前景好。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能想加入一家初创公司，不再拧螺丝钉，做有impact的事情，得到一定的经济奖励以及一次财务自由的机会。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能本身就在初创公司，苦于招不到合适、有共同理想的人。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能是一家初创公司的创始人，希望让你的公司更加有知名度。<br /></Typography>\n            <Typography variant=\"p\" >- ...<br /></Typography>\n            <Typography variant=\"p\" >remote and startup也是为了解决以上的这些事情而诞生的。<br /></Typography>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"40px\" >\n                <b>它是一座连接初创/远程公司与求职者的桥梁。</b></Typography>\n\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react'\nimport { Typography } from '@mui/material';\n\nfunction Hire() {\n    return (\n        <div>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"20px\"  >为什么选择 remote and startup？<br /></Typography>\n            <Typography variant=\"p\"  >\n                - 更多的高质量求职者：关注远程、初创企业工作的求职者一般各方面素质都比较高。目前网站80%以上的用户毕业于211、985，或海外知名院校，或有大厂经历。<br /></Typography>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"20px\"  >如何招人？<br /></Typography>\n            <Typography variant=\"p\"  >\n                - 目前，为了保证remote and startup上面的信息质量，每条招聘信息我都会人工审核其真实性。<br /></Typography>\n            <Typography variant=\"p\"  > 如希望合作，可以<a target='_blank' href='https://wj.qq.com/s2/9211078/306e/' style={{ color: '#3875cb' }}>填写问卷</a>, 审核通过后会出现在网站上。<br /></Typography>\n\n        </div>\n    )\n}\n\nexport default Hire\n","import React from 'react'\nimport { Typography } from '@mui/material';\n\nconst tags = [\"🌎 远程\", \"🏡 初创\", \"👩‍💻 兼职\", \"🇺🇸 英语\"]\n\n\nfunction Filter() {\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n            <Typography fontSize='smaller'>\n                筛选：\n            </Typography>\n            <div style={{ borderRadius: '100px', border: '1px solid black', padding: '5px 10px 5px 10px', marginLeft: '10px' }}>\n                <Typography fontSize='smaller'>\n                    🌎 远程\n                </Typography>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport JobCard from './JobCard';\nimport About from './About';\nimport Hire from './Hire';\nimport Filter from './Filter';\nimport ReactGA from 'react-ga'\n\n\nexport default function BasicTabs({ jobs }) {\n    ReactGA.initialize({ trackingId: process.env.REACT_APP_GA })\n    const [value, setValue] = React.useState('1');\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Box sx={{ width: '100%', typography: 'body1' }}>\n            <TabContext value={value}>\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                    <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n                        <Tab label=\"我要找工作\" value=\"1\" />\n                        <Tab label=\"我要招人\" value=\"2\" onClick={() => ReactGA.event({\n                            category: `Click`,\n                            action: `Hire Tab Clicked`,\n                        })} />\n                        <Tab label=\"关于\" value=\"3\" />\n                    </TabList>\n                </Box>\n                <TabPanel value=\"1\">\n                    {/* <Filter /> */}\n                    {\n                        jobs &&\n                        jobs.map((job, i) => <JobCard job={job.fields} key={job.id} />)\n                    }\n                </TabPanel>\n                <TabPanel value=\"2\">\n                    <Hire />\n                </TabPanel>\n                <TabPanel value=\"3\"><About /></TabPanel>\n            </TabContext>\n        </Box>\n    );\n}\n","import * as React from 'react';\nimport { useState, useEffect } from 'react'\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { Typography } from '@mui/material';\nimport axios from 'axios'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Tabs from './Tabs';\nimport ReactGA from 'react-ga'\n\nexport function getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n\nexport default function App() {\n  ReactGA.initialize({ trackingId: process.env.REACT_APP_GA })\n  ReactGA.event({\n    category: `View`,\n    action: `Homepage Viewed`,\n  })\n  var Airtable = require('airtable');\n  const [jobs, setJobs] = useState([])\n  const imageNumber = getRandomInt(10)\n  useEffect(() => {\n    const getJobs = async () => {\n      const res = await axios(`https://api.airtable.com/v0/appyjM9dHDeXhpYsi/Table%201?api_key=${process.env.REACT_APP_API_KEY}`)\n      // console.log(res);\n      setJobs(res.data.records)\n    };\n    getJobs()\n\n  }, [])\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n    },\n  });\n\n\n  return (\n    // <ThemeProvider theme={darkTheme}>\n    <React.Fragment>\n      <CssBaseline />\n      <div style={{\n        backgroundImage: jobs && jobs.length > 0 && `url(\"./images/${imageNumber}.jpg\")`, backgroundSize: 'cover',\n        backgroundPosition: 'bottom', height: '300px'\n      }}>\n        <Container maxWidth=\"lg\">\n          <Typography variant=\"h5\" sx={{ height: '300px', pt: '240px', color: 'white', textShadow: '2px 2px #000000' }}>\n            <b>remoteandstartup.com</b>\n          </Typography>\n\n        </Container>\n\n      </div>\n      <Container maxWidth=\"lg\">\n\n        <Tabs jobs={jobs} />\n      </Container>\n    </React.Fragment>\n    // </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n    <App />\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}