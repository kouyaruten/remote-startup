{"version":3,"sources":["features/counter/counterSlice.js","Filter.js","Tag.js","JobCard.js","About.js","Hire.js","JobsList.js","App.js","serviceWorker.js","app/store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","value","reducers","add","state","action","includes","payload","push","cancel","filter","text","toggle","clear","actions","selectCount","counter","mystyle","borderRadius","padding","marginLeft","cursor","userSelect","Filter","filters","useSelector","dispatch","useDispatch","console","log","style","display","flexDirection","alignItems","marginTop","Typography","onClick","backgroundColor","fontSize","Button","sx","ml","variant","Tag","JobCard","job","darkTheme","createTheme","palette","mode","ThemeProvider","theme","justifyContent","border","boxShadow","Box","image","src","url","width","height","align","component","CardContent","flex","color","company","fontWeight","jobTitle","minMonthlySalary","maxMonthlySalary","numberOfMonth","salary","parseInt","tags","href","link","About","mt","Hire","target","JobsList","jobs","every","elem","fields","map","i","id","LinkTab","props","useHistory","Tab","event","App","ReactGA","initialize","trackingId","process","category","require","useState","setJobs","window","location","React","setValue","useEffect","a","axios","res","data","records","getJobs","CssBaseline","background","backgroundRepeat","backgroundSize","backgroundPosition","Container","maxWidth","pt","textShadow","Tabs","onChange","newValue","aria-label","label","path","exact","to","Boolean","hostname","match","store","configureStore","reducer","counterReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff7ee79b.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: [],\n  // status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\n// export const incrementAsync = createAsyncThunk(\n//   'counter/fetchCount',\n//   async (amount) => {\n//     const response = await fetchCount(amount);\n//     // The value we return becomes the `fulfilled` action payload\n//     return response.data;\n//   }\n// );\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    add: (state, action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      if (!state.value.includes(action.payload)) state.value.push(action.payload)\n    },\n    cancel: (state, action) => {\n      if (state.value.includes(action.payload)) state.value = state.value.filter(text => text !== action.payload)\n    },\n    toggle: (state, action) => {\n      if (state.value.includes(action.payload)) state.value = state.value.filter(text => text !== action.payload)\n      else state.value.push(action.payload)\n    },\n    clear: (state) => {\n      state.value = []\n    }\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    // incrementByAmount: (state, action) => {\n    //   state.value += action.payload;\n    // },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(incrementAsync.pending, (state) => {\n  //       state.status = 'loading';\n  //     })\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\n  //       state.status = 'idle';\n  //       state.value += action.payload;\n  //     });\n  // },\n});\n\nexport const { add, cancel, toggle, clear } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport default counterSlice.reducer;\n","import React from 'react'\nimport { Typography } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    add, cancel, selectCount, toggle, clear\n} from './features/counter/counterSlice';\nimport Button from '@mui/material/Button';\n\nconst tags = [\"🌎 远程\", \"🏡 初创\", \"👩‍💻 兼职\", \"🇺🇸 英语\", \"🇨🇳 中文\"]\n\nconst mystyle = {\n    borderRadius: '100px',\n    padding: '5px 10px 5px 10px',\n    marginLeft: '10px',\n    cursor: 'pointer',\n    userSelect: 'none'\n};\n\nfunction Filter() {\n    const filters = useSelector(selectCount);\n    const dispatch = useDispatch();\n    console.log(filters);\n    return (\n        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: '20px' }}>\n            <Typography>\n                筛选：\n            </Typography>\n            <div onClick={() => {\n                dispatch(toggle(\"remote\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('remote') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    🌎 远程\n                </Typography>\n            </div>\n\n            <div onClick={() => {\n                dispatch(toggle(\"startup\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('startup') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    🏡 初创\n                </Typography>\n            </div>\n\n            <div onClick={() => {\n                dispatch(toggle(\"parttime\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('parttime') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    👩‍💻 兼职\n                </Typography>\n            </div>\n\n            <div onClick={() => {\n                dispatch(toggle(\"english\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('english') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    🇺🇸 英语\n                </Typography>\n            </div>\n\n            <div onClick={() => {\n                dispatch(toggle(\"chinese\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('chinese') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    🇨🇳 中文\n                </Typography>\n            </div>\n\n            <Button sx={{ ml: '10px' }} variant=\"text\" onClick={() => dispatch(clear())}>清空筛选</Button>\n        </div >\n    )\n}\n\nexport default Filter\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\n\nfunction Tag({ text }) {\n    return (\n        <div style={{ borderRadius: '100px', padding: '5px 10px 5px 10px', marginLeft: '10px', backgroundColor: '#efeeee' }}>\n            <Typography fontSize='smaller'>\n                {text}\n            </Typography>\n\n        </div>\n    )\n}\n\nexport default Tag\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Tag from './Tag';\n\nexport default function JobCard({ job }) {\n    const darkTheme = createTheme({\n        palette: {\n            mode: 'light',\n        },\n    });\n    // console.log(job.tags);\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: \"20px\", borderRadius: \"12px\", border: '1px solid #dddddd', boxShadow: '2px 2px 4px #efeeee' }}>\n                <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    {job.image ? <img src={job.image[0].url} style={{ width: '60px', height: '60px', marginLeft: '20px', borderRadius: '8px', border: '1px solid #dddddd' }} /> :\n                        <Typography align='center' display=\"block\" variant=\"h3\" component=\"div\" sx={{ width: '60px', height: '60px', marginLeft: '20px', borderRadius: '8px', border: '1px solid #dddddd', alignItems: 'center' }} >\n                            💻\n                        </Typography>\n                    }\n                    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n\n                        <CardContent sx={{ flex: '1 0 auto', width: '25vw' }}>\n                            <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\" >\n                                {job.company}\n                            </Typography>\n\n                            <Typography component=\"div\" variant=\"h6\" fontWeight=\"700\">\n                                {job.jobTitle}\n                            </Typography>\n                            {((job.minMonthlySalary && job.maxMonthlySalary && job.numberOfMonth) || job.salary) &&\n                                <div style={{ backgroundColor: '#dddddd', padding: '5px 10px 5px 10px', borderRadius: '4px', marginTop: '4px', display: 'inline-block' }}>\n                                    <Typography component=\"div\" variant=\"p\" fontWeight=\"700\">\n                                        {(job.minMonthlySalary && job.maxMonthlySalary && job.numberOfMonth) && \"💰 \" + parseInt(job.minMonthlySalary / 1000) + \"k - \" + parseInt(job.maxMonthlySalary / 1000) + \"k * \" + job.numberOfMonth}\n                                        {job.salary && \"💰 \" + parseInt(job.salary) / 10000 + \"w\"}\n                                    </Typography>\n                                </div>}\n                        </CardContent>\n\n\n                    </Box>\n                </Box>\n                <CardContent sx={{ display: 'flex', flexDirection: 'row', width: '40%' }}>\n                    {(job.tags && job.tags.includes(\"remote\")) && <Tag text=\"🌎 远程\" />}\n                    {(job.tags && job.tags.includes(\"startup\")) && <Tag text=\"🏡 初创\" />}\n                    {(job.tags && job.tags.includes(\"parttime\")) && <Tag text=\"👩‍💻 兼职\" />}\n                    {(job.tags && job.tags.includes(\"english\")) && <Tag text=\"🇺🇸 英语\" />}\n                    {(job.tags && job.tags.includes(\"chinese\")) && <Tag text=\"🇨🇳 中文\" />}\n                </CardContent>\n                <CardContent>\n                    <Button variant=\"contained\" href={job.link}>\n                        申请\n                    </Button>\n                </CardContent>\n            </div>\n        </ThemeProvider>\n    );\n}\n","import React from 'react'\nimport { Typography } from '@mui/material';\n\nfunction About() {\n    return (\n        <div>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"20px\"  >关于远程工作<br /></Typography>\n            <Typography variant=\"p\"  >\n                - 你可能想找寻一份远程的工作，把更多在路上的时间花在陪家人、朋友，以及做更有意义的事情上面。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能想找一份远程的兼职，利用自己的闲暇时间赚些零花钱。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能想找一份国外的远程工作，打破工资水平的限制，让自己花更少的时间赚更多的钱。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能是一家公司的创始人，希望团队通过远程协作降低租金成本。<br /></Typography>\n            <Typography variant=\"p\" >- ...<br /></Typography>\n            <Typography variant=\"p\" >疫情之后，「远程工作」的可行性已经被验证，不少公司（如Quora）已经做出了远程优先（remote-first）的决策。国内的一些高质量公司也开始允许员工每周自由选择远程办公。</Typography>\n            <Typography variant=\"p\" >我认为，在未来，大家的工作将变得full-remote，不再受到地理条件的限制。<br /><br /></Typography>\n            <Typography variant=\"p\" >remote and startup是为了<b>加速这个流程</b>而诞生的。</Typography>\n\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"40px\"  >关于初创公司<br /></Typography>\n            <Typography variant=\"p\" >\n                - 你可能见过无数初创公司号称自己业务好、不加班、前景好。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能想加入一家初创公司，不再拧螺丝钉，做有impact的事情，得到一定的经济奖励以及一次财务自由的机会。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能本身就在初创公司，苦于招不到合适、有共同理想的人。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能是一家初创公司的创始人，希望让你的公司更加有知名度。<br /></Typography>\n            <Typography variant=\"p\" >- ...<br /></Typography>\n            <Typography variant=\"p\" >remote and startup也是为了解决以上的这些事情而诞生的。<br /></Typography>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"40px\" >\n                <b>它是一座连接初创/远程公司与求职者的桥梁。</b></Typography>\n\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react'\nimport { Typography } from '@mui/material';\n\nfunction Hire() {\n    return (\n        <div>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"20px\"  >为什么选择 remote and startup？<br /></Typography>\n            <Typography variant=\"p\"  >\n                - 更多的高质量求职者：关注远程、初创企业工作的求职者一般各方面素质都比较高。目前网站80%以上的用户毕业于211、985，或海外知名院校，或有大厂经历。<br /></Typography>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"20px\"  >如何招人？<br /></Typography>\n            <Typography variant=\"p\"  >\n                - 目前，为了保证remote and startup上面的信息质量，每条招聘信息我都会人工审核其真实性。<br /></Typography>\n            <Typography variant=\"p\"  > 如希望合作，可以<a target='_blank' href='https://wj.qq.com/s2/9211078/306e/' style={{ color: '#3875cb' }}>填写问卷</a>, 审核通过后会出现在网站上。<br /></Typography>\n\n        </div>\n    )\n}\n\nexport default Hire\n","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport JobCard from './JobCard'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    add, cancel, selectCount, toggle, clear\n} from './features/counter/counterSlice';\n\nfunction JobsList({ jobs }) {\n    const filters = useSelector(selectCount);\n\n    return (\n        <div>\n            <Filter />\n            {\n\n\n                jobs.filter(job => filters.every(elem => job.fields.tags.includes(elem))).map((job, i) => <JobCard job={job.fields} key={job.id} />)\n\n            }\n        </div>\n    )\n}\n\nexport default JobsList\n","import * as React from 'react';\nimport { useState, useEffect } from 'react'\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { Typography } from '@mui/material';\nimport axios from 'axios'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ReactGA from 'react-ga'\nimport Filter from './Filter';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport JobCard from './JobCard';\nimport About from './About';\nimport Hire from './Hire';\nimport Tabs from '@mui/material/Tabs';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  Redirect,\n  useLocation\n} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport JobsList from './JobsList';\n\nfunction LinkTab(props) {\n  const history = useHistory();\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        // event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nexport function getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n\nexport default function App() {\n  ReactGA.initialize({ trackingId: process.env.REACT_APP_GA })\n  ReactGA.event({\n    category: `View`,\n    action: `Homepage Viewed`,\n  })\n  var Airtable = require('airtable');\n  const [jobs, setJobs] = useState([])\n  const url = window.location.href\n  const [value, setValue] = React.useState(url.includes('home') ? 0 : url.includes('hire') ? 1 : 2);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    const getJobs = async () => {\n      const res = await axios(`https://api.airtable.com/v0/appyjM9dHDeXhpYsi/Table%201?api_key=${process.env.REACT_APP_API_KEY}`)\n      setJobs(res.data.records)\n    };\n    getJobs()\n\n\n  }, [])\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n    },\n  });\n\n  console.log(jobs);\n\n\n  return (\n    // <ThemeProvider theme={darkTheme}>\n    <React.Fragment>\n      <CssBaseline />\n      <Router>\n        <div>\n\n\n          <div style={{\n            background: \"linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('./images/background.svg')\"\n            , backgroundRepeat: 'repeat'\n            , backgroundSize: '200px 200px',\n            backgroundPosition: 'bottom', height: '200px'\n          }}>\n            <Container maxWidth=\"lg\">\n              <Typography variant=\"h5\" sx={{ height: '200px', pt: '140px', color: 'white', textShadow: '2px 2px #000000' }}>\n                <b>remoteandstartup.com</b>\n              </Typography>\n\n            </Container>\n\n          </div>\n          <Container maxWidth=\"lg\">\n            <Box sx={{ width: '100%' }}>\n              <Tabs value={value} onChange={handleChange} aria-label=\"nav tabs\">\n                <LinkTab label=\"我要找工作\" href=\"/home\" />\n                <LinkTab label=\"我要招人\" href=\"/hire\" />\n                <LinkTab label=\"关于\" href=\"/about\" />\n              </Tabs>\n            </Box>\n            <Switch>\n              <Route path=\"/home\">\n                <JobsList jobs={jobs} />\n              </Route>\n              <Route path=\"/hire\">\n                <Hire />\n              </Route>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route exact path=\"/\">\n                <Redirect to=\"/home\" />\n              </Route>\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    </React.Fragment >\n    // </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './app/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}