{"version":3,"sources":["features/counter/counterSlice.js","Filter.js","Tag.js","JobCard.js","About.js","Hire.js","JobsList.js","App.js","serviceWorker.js","app/store.js","index.js"],"names":["initialState","value","JSON","parse","localStorage","getItem","counterSlice","createSlice","name","reducers","add","state","action","includes","payload","push","setItem","stringify","cancel","filter","text","toggle","clear","actions","selectCount","counter","mystyle","borderRadius","padding","marginLeft","cursor","userSelect","Filter","filters","useSelector","dispatch","useDispatch","console","log","style","display","flexWrap","flexDirection","alignItems","Typography","onClick","backgroundColor","fontSize","Button","sx","ml","variant","Tag","JobCard","job","darkTheme","createTheme","palette","mode","ThemeProvider","theme","Stack","direction","spacing","justifyContent","marginTop","border","boxShadow","Grid","container","image","src","url","width","height","align","component","item","xs","md","CardContent","flex","color","company","fontWeight","jobTitle","minMonthlySalary","maxMonthlySalary","numberOfMonth","salary","parseInt","tags","href","link","About","mt","Link","Hire","target","JobsList","jobs","every","elem","fields","map","i","id","App","ReactGA","initialize","trackingId","process","event","category","require","useState","setJobs","window","location","React","setValue","useEffect","a","axios","res","data","records","getJobs","CssBaseline","background","backgroundRepeat","backgroundSize","backgroundPosition","Container","maxWidth","pt","textShadow","Box","typography","TabContext","borderBottom","borderColor","TabList","onChange","newValue","aria-label","Tab","label","TabPanel","Boolean","hostname","match","store","configureStore","reducer","counterReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.846c89ef.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: JSON.parse(localStorage.getItem(\"filters\")) || [],\n  // status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\n// export const incrementAsync = createAsyncThunk(\n//   'counter/fetchCount',\n//   async (amount) => {\n//     const response = await fetchCount(amount);\n//     // The value we return becomes the `fulfilled` action payload\n//     return response.data;\n//   }\n// );\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    add: (state, action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      if (!state.value.includes(action.payload)) state.value.push(action.payload)\n      localStorage.setItem(\"filters\", JSON.stringify(state.value));\n\n    },\n    cancel: (state, action) => {\n      if (state.value.includes(action.payload)) state.value = state.value.filter(text => text !== action.payload)\n      localStorage.setItem(\"filters\", JSON.stringify(state.value));\n\n    },\n    toggle: (state, action) => {\n      if (state.value.includes(action.payload)) state.value = state.value.filter(text => text !== action.payload)\n      else state.value.push(action.payload)\n      localStorage.setItem(\"filters\", JSON.stringify(state.value));\n    },\n    clear: (state) => {\n      state.value = []\n      localStorage.setItem(\"filters\", JSON.stringify(state.value));\n    }\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    // incrementByAmount: (state, action) => {\n    //   state.value += action.payload;\n    // },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(incrementAsync.pending, (state) => {\n  //       state.status = 'loading';\n  //     })\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\n  //       state.status = 'idle';\n  //       state.value += action.payload;\n  //     });\n  // },\n});\n\nexport const { add, cancel, toggle, clear } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport default counterSlice.reducer;\n","import React from 'react'\nimport { Typography } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    add, cancel, selectCount, toggle, clear\n} from './features/counter/counterSlice';\nimport Button from '@mui/material/Button';\n\nconst tags = [\"🌎 远程\", \"🏡 初创\", \"👩‍💻 兼职\", \"🇺🇸 英语\", \"🇨🇳 中文\"]\n\nconst mystyle = {\n    borderRadius: '100px',\n    padding: '5px 10px 5px 10px',\n    marginLeft: '10px',\n    cursor: 'pointer',\n    userSelect: 'none'\n};\n\nfunction Filter() {\n    const filters = useSelector(selectCount);\n    const dispatch = useDispatch();\n    console.log(filters);\n    return (\n        <div style={{ display: 'flex', flexWrap: 'wrap', flexDirection: 'row', alignItems: 'center' }}>\n            <Typography>\n                筛选：\n            </Typography>\n            <div onClick={() => {\n                dispatch(toggle(\"remote\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('remote') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    🌎 远程\n                </Typography>\n            </div>\n\n            <div onClick={() => {\n                dispatch(toggle(\"startup\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('startup') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    🏡 初创\n                </Typography>\n            </div>\n\n            <div onClick={() => {\n                dispatch(toggle(\"parttime\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('parttime') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    👩‍💻 兼职\n                </Typography>\n            </div>\n\n            <div onClick={() => {\n                dispatch(toggle(\"english\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('english') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    🇺🇸 英语\n                </Typography>\n            </div>\n\n            <div onClick={() => {\n                dispatch(toggle(\"chinese\"));\n            }} style={{ ...mystyle, backgroundColor: filters.includes('chinese') ? '#cccccc' : '#efeeee' }}>\n                <Typography fontSize='smaller'>\n                    🇨🇳 中文\n                </Typography>\n            </div>\n\n            <Button sx={{ ml: '10px' }} variant=\"text\" onClick={() => dispatch(clear())}>清空筛选</Button>\n        </div >\n    )\n}\n\nexport default Filter\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\n\nfunction Tag({ text }) {\n    return (\n        <div style={{ display: 'inline-block', borderRadius: '100px', padding: '5px 10px 5px 10px', marginLeft: '10px', backgroundColor: '#efeeee' }}>\n            <Typography fontSize='smaller'>\n                {text}\n            </Typography>\n\n        </div>\n    )\n}\n\nexport default Tag\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Tag from './Tag';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\n\n\nexport default function JobCard({ job }) {\n    const darkTheme = createTheme({\n        palette: {\n            mode: 'light',\n        },\n    });\n    // console.log(job.tags);\n    return (\n        <ThemeProvider theme={darkTheme}>\n            {/* <Grid container spacing={2}>\n                <Grid item xs={6} md={8}>\n                    <Item>xs=6 md=8</Item>\n                </Grid>\n                <Grid item xs={6} md={4}>\n                    <Item>xs=6 md=4</Item>\n                </Grid>\n                <Grid item xs={6} md={4}>\n                    <Item>xs=6 md=4</Item>\n                </Grid>\n                <Grid item xs={6} md={8}>\n                    <Item>xs=6 md=8</Item>\n                </Grid>\n            </Grid> */}\n            <Stack direction=\"row\" spacing={2} style={{ justifyContent: \"space-between\", alignItems: 'center', marginTop: \"20px\", borderRadius: \"12px\", border: '1px solid #dddddd', boxShadow: '2px 2px 4px #efeeee' }}>\n                <Grid container sx={{ alignItems: 'center', padding: '10px' }} >\n                    {job.image ? <img src={job.image[0].url} style={{ width: '60px', height: '60px', marginLeft: '20px', borderRadius: '8px', border: '1px solid #dddddd' }} /> :\n                        <Typography align='center' display=\"block\" variant=\"h3\" component=\"div\" sx={{ width: '60px', height: '60px', marginLeft: '20px', borderRadius: '8px', border: '1px solid #dddddd', alignItems: 'center' }} >\n                            💻\n                        </Typography>\n                    }\n                    <Grid item sx={{ display: 'flex', flexDirection: 'column' }} xs={12} md={5}>\n\n                        <CardContent sx={{ flex: '1 0 auto' }}>\n                            <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\" >\n                                {job.company}\n                            </Typography>\n\n                            <Typography component=\"div\" variant=\"h6\" fontWeight=\"700\">\n                                {job.jobTitle}\n                            </Typography>\n                            {((job.minMonthlySalary && job.maxMonthlySalary && job.numberOfMonth) || job.salary) &&\n                                <div style={{ backgroundColor: '#dddddd', padding: '5px 10px 5px 10px', borderRadius: '4px', marginTop: '4px', display: 'inline-block' }}>\n                                    <Typography component=\"div\" variant=\"p\" fontWeight=\"700\">\n                                        {(job.minMonthlySalary && job.maxMonthlySalary && job.numberOfMonth) && \"💰 \" + parseInt(job.minMonthlySalary / 1000) + \"k - \" + parseInt(job.maxMonthlySalary / 1000) + \"k * \" + job.numberOfMonth}\n                                        {job.salary && \"💰 \" + parseInt(job.salary) / 10000 + \"w\"}\n                                    </Typography>\n                                </div>}\n                        </CardContent>\n\n\n                    </Grid>\n\n                    <Grid item xs={10} md={4} sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n                        {(job.tags && job.tags.includes(\"remote\")) && <Tag text=\"🌎 远程\" />}\n                        {(job.tags && job.tags.includes(\"startup\")) && <Tag text=\"🏡 初创\" />}\n                        {(job.tags && job.tags.includes(\"parttime\")) && <Tag text=\"👩‍💻 兼职\" />}\n                        {(job.tags && job.tags.includes(\"english\")) && <Tag text=\"🇺🇸 英语\" />}\n                        {(job.tags && job.tags.includes(\"chinese\")) && <Tag text=\"🇨🇳 中文\" />}\n\n                    </Grid>\n\n                    <Grid item xs={6} md={2} sx={{ padding: '10px' }}>\n                        <Button variant=\"contained\" href={job.link}>\n                            申请\n                        </Button>\n                    </Grid>\n                </Grid>\n\n\n\n            </Stack>\n        </ThemeProvider>\n    );\n}\n","import React from 'react'\nimport { Typography } from '@mui/material';\nimport Link from '@mui/material/Link';\n\nfunction About() {\n    return (\n        <div>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"20px\"  >关于远程工作<br /></Typography>\n            <Typography variant=\"p\"  >\n                - 你可能想找寻一份远程的工作，把更多在路上的时间花在陪家人、朋友，以及做更有意义的事情上面。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能想找一份远程的兼职，利用自己的闲暇时间赚些零花钱。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能想找一份国外的远程工作，打破工资水平的限制，让自己花更少的时间赚更多的钱。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能是一家公司的创始人，希望团队通过远程协作降低租金成本。<br /></Typography>\n            <Typography variant=\"p\" >- ...<br /></Typography>\n            <Typography variant=\"p\" >疫情之后，「远程工作」的可行性已经被验证，不少公司（如Quora）已经做出了远程优先（remote-first）的决策。国内的一些高质量公司也开始允许员工每周自由选择远程办公。</Typography>\n            <Typography variant=\"p\" >我认为，在未来，大家的工作将变得full-remote，不再受到地理条件的限制。<br /><br /></Typography>\n            <Typography variant=\"p\" >remote and startup是为了<b>加速这个流程</b>而诞生的。</Typography>\n\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"40px\"  >关于初创公司<br /></Typography>\n            <Typography variant=\"p\" >\n                - 你可能见过无数初创公司号称自己业务好、不加班、前景好。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能想加入一家初创公司，不再拧螺丝钉，做有impact的事情，得到一定的经济奖励以及一次财务自由的机会。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能本身就在初创公司，苦于招不到合适、有共同理想的人。<br /></Typography>\n            <Typography variant=\"p\" >- 你可能是一家初创公司的创始人，希望让你的公司更加有知名度。<br /></Typography>\n            <Typography variant=\"p\" >- ...<br /></Typography>\n            <Typography variant=\"p\" >remote and startup也是为了解决以上的这些事情而诞生的。<br /></Typography>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"40px\" >\n                <b>它是一座连接初创/远程公司与求职者的桥梁。<Link href=\"https://discord.gg/rGGxkSAjpQ\">💬 加入讨论组</Link></b></Typography>\n\n\n\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"40px\"  >数据更新<br /></Typography>\n            <Typography variant=\"p\" >\n                每天都会加一些新的职位发布，一周会进行一次大型更新，敬请期待～<br /></Typography>\n\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react'\nimport { Typography } from '@mui/material';\n\nfunction Hire() {\n    return (\n        <div>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"20px\"  >为什么选择 remote and startup？<br /></Typography>\n            <Typography variant=\"p\"  >\n                - 更多的高质量求职者：关注远程、初创企业工作的求职者一般各方面素质都比较高。目前网站80%以上的用户毕业于211、985，或海外知名院校，或有大厂经历。<br /></Typography>\n            <Typography variant=\"h6\" fontWeight=\"700\" mt=\"20px\"  >如何招人？<br /></Typography>\n            <Typography variant=\"p\"  >\n                - 目前，为了保证remote and startup上面的信息质量，每条招聘信息我都会人工审核其真实性。<br /></Typography>\n            <Typography variant=\"p\"  > 如希望合作，可以<a target='_blank' href='https://wj.qq.com/s2/9211078/306e/' style={{ color: '#3875cb' }}>填写问卷</a>, 审核通过后会出现在网站上。<br /></Typography>\n\n        </div>\n    )\n}\n\nexport default Hire\n","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport JobCard from './JobCard'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    add, cancel, selectCount, toggle, clear\n} from './features/counter/counterSlice';\n\nfunction JobsList({ jobs }) {\n    const filters = useSelector(selectCount);\n\n    return (\n        <div>\n            <Filter />\n            {\n\n\n                jobs.filter(job => filters.every(elem => job.fields.tags.includes(elem))).map((job, i) => <JobCard job={job.fields} key={job.id} />)\n\n            }\n        </div>\n    )\n}\n\nexport default JobsList\n","import * as React from 'react';\nimport { useState, useEffect } from 'react'\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { Typography } from '@mui/material';\nimport axios from 'axios'\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ReactGA from 'react-ga'\nimport Filter from './Filter';\nimport JobCard from './JobCard';\nimport About from './About';\nimport Hire from './Hire';\nimport JobsList from './JobsList';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Box from '@mui/material/Box';\n\nexport function getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n\nexport default function App() {\n  ReactGA.initialize({ trackingId: process.env.REACT_APP_GA })\n  ReactGA.event({\n    category: `View`,\n    action: `Homepage Viewed`,\n  })\n  var Airtable = require('airtable');\n  const [jobs, setJobs] = useState([])\n  const url = window.location.href\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    const getJobs = async () => {\n      const res = await axios(`https://api.airtable.com/v0/appyjM9dHDeXhpYsi/Table%201?api_key=${process.env.REACT_APP_API_KEY}`)\n      setJobs(res.data.records)\n    };\n    getJobs()\n\n\n  }, [])\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n    },\n  });\n\n  console.log(jobs);\n\n\n  return (\n    // <ThemeProvider theme={darkTheme}>\n    <React.Fragment>\n      <CssBaseline />\n      <div>\n\n\n        <div style={{\n          background: \"linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('./images/background.svg')\"\n          , backgroundRepeat: 'repeat'\n          , backgroundSize: '200px 200px',\n          backgroundPosition: 'bottom', height: '200px'\n        }}>\n          <Container maxWidth=\"lg\">\n            <Typography variant=\"h5\" sx={{ height: '200px', pt: '140px', color: 'white', textShadow: '2px 2px #000000' }}>\n              <b>remoteandstartup.com</b>\n            </Typography>\n\n          </Container>\n\n        </div>\n        <Container maxWidth=\"lg\">\n          <Box sx={{ width: '100%', typography: 'body1' }}>\n            <TabContext value={value}>\n              <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n                  <Tab label=\"我要找工作\" value=\"1\" />\n                  <Tab label=\"我要招人\" value=\"2\" />\n                  <Tab label=\"关于\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\"><JobsList jobs={jobs} /></TabPanel>\n              <TabPanel value=\"2\"><Hire /></TabPanel>\n              <TabPanel value=\"3\"><About /></TabPanel>\n            </TabContext>\n          </Box>\n\n        </Container>\n      </div>\n    </React.Fragment >\n    // </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './app/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}